/*
Given a sorted array Arr of size N and a number X, you need to find the number of occurrences of X in Arr.
*
*
Sample Input 1 :- 
N = 7, X = 2
Arr[] = {1, 1, 2, 2, 2, 2, 3}
Output: 4
*
*/

Solution :-

class Solution{
public:	
	int firstOccurence(int arr[],int n,int x)                                           //   This Function calculates first occurence of that element
{
    int start=0;
    int end=n-1;
    int ans=-1;
    while(start<=end)
    {
        int mid=(start+end)/2;
        if(arr[mid]==x)
        {
            ans=mid;
            end=end-1;
        }
        else if(arr[mid]>x)
        {
            end=end-1;
        }
        else
        {
            start=start+1;
        }
    }
    return ans;
}
int lastOccurence(int arr[],int n,int x)                                // This Function calculates last occurence of that element
{
    int start=0;
    int end=n-1;
    int ans=-1;
     while(start<=end)
    {
        int mid=(start+end)/2;
        if(arr[mid]==x)
        {
            ans=mid;
            start=start+1;
        }
        else if(arr[mid]>x)
        {
            end=end-1;
        }
        else
        {
            start=start+1;
        }
    }
    return ans;
}
	int count(int arr[], int n, int x) {
    int first_occurence = firstOccurence(arr,n,x);
    if(first_occurence==-1)                                                     // If the element is not present, then return 0.
    return 0;
    int last_occurence = lastOccurence(arr,n,x);
    return (last_occurence-first_occurence+1);
	}
};
